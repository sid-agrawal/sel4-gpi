syntax = "proto3";

enum RamdiskError {
    NONE = 0;                    /* no error */
    UNKNOWN = 11;                /* (XXX) Arya: Manually set to the seL4_NumErrors */
    NO_BLOCKS = 12;              /* no more blocks to allocate */
};

enum RamdiskAction {
    BIND = 0;       /* bind a client with some shared memory frame */
    UNBIND = 1;     /* unbind a client with some shared memory frame */
    ALLOC = 2;      /* request a new free block from the ramdisk */
    READ = 3;       /* request to read a block */
    WRITE = 4;      /* request to write a block */
    FREE = 5;       /* request to free a block */
};

/* message type for all ramdisk request messages */
message RamdiskMessage {
    uint64 magic = 100;
    RamdiskAction op = 1;
};

/* return from a basic ramdisk message */
message RamdiskBasicReturnMessage {
    /* No content */
};

/* return from a ramdisk alloc message */
message RamdiskAllocReturnMessage {
    uint64 slot = 1;        /* destination slot of the allocated block */
    uint32 block_id = 2;     /* The allocated block ID */
    uint32 space_id = 3;     /* The block space ID */
}

/* message type for all ramdisk return messages */
message RamdiskReturnMessage {
    RamdiskError errorCode = 1; 
    oneof msg {
        RamdiskBasicReturnMessage basic = 2;
        RamdiskAllocReturnMessage alloc = 3;
    };
};
